#compdef autopkg
#autoload

__info() {
  _arguments \
    '(-h,--help)'{-h,--help}'[show help on info command and exit]' \
    '(-d,--search-dir=)'{-d,--search-dir=}'[Directory to search for recipes. Can be specified multiple times]:directory:_files -/' \
    '--override-dir=[Directory to search for recipe overrides. Can be specified multiple times]:directory:_files -/'
}

__install() {
  _arguments \
    '(-h,--help)'{-h,--help}'[show help on install command and exit]' \
    '(--post=,--postprocessor=)'{--post=,--postprocessor=}'[Name of a processor to run after each recipe. Can be repeated to run multiple postprocessors.]:file:_files' \
    '(-c,--check)'{-c,--check}'[Only check for new/changed downloads.]' \
    '(-k,--key=)'{-k,--key=}'[ Provide key/value pairs for recipe input. Caution: values specified here will be applied to all recipes.]' \
    '(-l,--recipe-list=)'{-l,--recipe-list=}'[Path to a text file with a list of recipes to run.]:file:_files' \
    '(-p,--pkg=)'{-p,--pkg=}'[Path to a pkg or dmg to provide to a recipe. Downloading will be skipped.]:file:_files' \
    '--report-plist=[File path to save run report plist.]:directory:_files' \
    '(-v,--verbose)'{-v,--verbose}'[Verbose output.]' \
    '(-d,--search-dir=)'{-d,--search-dir=}'[Directory to search for recipes. Can be specified multiple times.]:directory:_files -/' \
    '--override-dir=[Directory to search for recipe overrides. Can be specified multiple times.]:directory:_files -/'
}

__list-recipes() {
  _arguments \
    '(-h,--help)'{-h,--help}'[show help on list-recipes command and exit]' \
    '(-i,--with-identifiers)'{-i,--with-identifiers}'[Include recipe'\''s identifier in the list.]' \
    '(-p,--with-paths)'{-p,--with-paths}'[Include recipe'\''s path in the list.]' \
    '--plist[Print recipe list in plist format. This provides all available key/value pairs of recipes.]' \
    '(-a,--show-all)'{-a,--show-all}'[Include recipes with duplicate shortnames, including overrides. Use in conjunction with '\''--with-identifiers'\'', '\''--with-paths'\'', or '\''--plist'\''.]' \
    '(-d,--search-dir=)'{-d,--search-dir=}'[Directory to search for recipes. Can be specified multiple times.]:directory:_files -/' \
    '--override-dir=[Directory to search for recipe overrides. Can be specified multiple times.]:directory:_files -/'
}

__make-override() {
  _arguments \
    '(-h,--help)'{-h,--help}'[show help on make-override command and exit]' \
    '(-d,--search-dir=)'{-d,--search-dir=}'[Directory to search for recipes. Can be specified multiple times.]:directory:_files -/' \
    '--override-dir=[Directory to search for recipe overrides. Can be specified multiple times.]:directory:_files -/' \
    '(-n,--name=)'{-n,--name}'[Name for override file.]'
}

__processor-info() {
  _arguments \
    '(-h,--help)'{-h,--help}'[show help on processor-info command and exit]' \
    '(-r,--recipe=)'{-r,--recipe=}'[Name of recipe using the processor.]' \
    '(-d,--search-dir=)'{-d,--search-dir=}'[Directory to search for recipes. Can be specified multiple times.]:directory:_files -/' \
    '--override-dir=[Directory to search for recipe overrides. Can be specified multiple times.]:directory:_files -/' 
}

__repo-add() {
  _arguments \
    '(-h,--help)'{-h,--help}'[show help on repo-add command and exit]' 
}

__repo-delete() {
  _arguments \
    '(-h,--help)'{-h,--help}'[show help on repo-delete command and exit]' 
}

__repo-update() {
  _arguments \
    '(-h,--help)'{-h,--help}'[show help on repo-update command and exit]' 
}

__search() {
  _arguments \
    '(-h,--help)'{-h,--help}'[show help on search command and exit]' \
    '(-u,--user=)'{-u,--user}'[Alternate GitHub user whose repos to search. Defaults to '\''autopkg'\''.]' \
    '(-p,--path-only)'{-p,--path-only}'[Restrict search results to the recipe'\''s path only.  Note that the search API currently does not support fuzzy matches, so only exact directory or filenames (minus the extensions) will be returned.]' \
    '(-t,--use-token)'{-t,--use-token}'[Use a public-scope GitHub token for a higher rate limit. If a token doesn'\''t exist, you'\''ll be prompted for your account credentials to create one.]'
}


local -a _1st_arguments
_1st_arguments=(
  'help:display help'
  'info:get info about configuration or a recipe'
  'install:run one or more install recipes'
  'list-processors:list available core processors'
  'list-recipes:list recipes available locally'
  'make-override:make a recipe override'
  'processor-info:get information about a specific processor'
  'repo-add:add one or more recipe repo from a URL'
  'repo-delete:delete a recipe repo'
  'repo-list:list installed recipe repos'
  'repo-update:update one or more recipe repos'
  'search:search for recipes on github'
  'version:print the current version of autopkg'
)

_arguments '*:: :->command'

if (( CURRENT == 1 )); then
 _describe -t commands "autopkg subcommands" _1st_arguments
 return
fi

local -a _command_args
case "$words[1]" in
  info)
    __info ;;
  install)
    __install ;;
  list-recipes)
    __list-recipes ;;
  make-override)
    __make-override ;;
  processor-info)
    __processor-info ;;
  repo-add)
    __repo-add ;;
  repo-delete)
    __repo-delete ;;
  repo-update)
    __repo-update ;;
  search)
    __search ;;
esac
